// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @id @default(autoincrement())
  firstName       String
  lastName        String
  address         String
  phone           String?
  email           String     @unique
  password        String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  PurchaseHistory Transfer[] @relation("Buyer")
  SaleHistory     Transfer[] @relation("Seller")
  Products        Product[]
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  price       Float
  rent        Float
  category    Category
  ownerId     Int
  isRented    Boolean    @default(false)
  rentEndDate DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Transfers   Transfer[]
  Owner       User       @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

model Transfer {
  id        Int      @id @default(autoincrement())
  isRented  Boolean  @default(false)
  productId Int
  sellerId  Int
  buyerId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product  @relation(fields: [productId], references: [id])
  Seller    User     @relation("Seller", fields: [sellerId], references: [id], onDelete: Cascade)
  Buyer     User     @relation("Buyer", fields: [buyerId], references: [id], onDelete: Cascade)
}

enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  SPORTING_GOODS
  OUTDOOR
  TOYS
}
