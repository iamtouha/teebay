// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  address   String
  phone     String?
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Products  Product[] @relation("Owner")
  Bought    Product[] @relation("SoldTo")
  Borrowed  Rent[]
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  price       Float
  rent        Float
  categories  Category[]
  ownerId     Int
  soldToId    Int?
  soldAt      DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Owner       User       @relation("Owner", fields: [ownerId], references: [id], onDelete: Cascade)
  SoldTo      User?      @relation("SoldTo", fields: [soldToId], references: [id])
  Rent        Rent[]
}

model Rent {
  id        Int      @id @default(autoincrement())
  productId Int
  userId    Int
  rentedAt  DateTime
  rentEnd   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product  @relation(fields: [productId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  SPORTING_GOODS
  OUTDOOR
  TOYS
}
